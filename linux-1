       passwd
     cat /etc/passwd

           The /etc/passwd file is the most important file in Linux operating system. This file stores essential information about the users on the 
           system. This file is owned by the root user and to edit this file we must have root privileges. But try to avoid edit this file. 
           Now let’s see actually how this file look
           This file contains one entry per line. That means it stores one user’s information on one line. The user information contains seven fields 
           and each field is separated by the colon ( : )symbol. Each entry in the /etc/passwd file looks like this:

            john:x:1000:1000:John Doe:/home/john:/bin/bash
              Now let’s understand each field one by one:
              Username: 
                        This field stores the usernames which are used while login into the system. The length of this field is between 1 and 32 
                        characters.
              Password: 
                        This field store the password of the user. The x character indicates the password is stored in /etc/shadow file in the 
                        encrypted format. We can use the passwd command to update this field.
              User ID(UID): 
                        User identifier is the number assigned to each user by the operating system to refer the users. The 0 UID is
                        reserved for the root user. And 1-99 UID are reserved for other predefined accounts. And 100-999 are reserved by the 
                        system for administrative and system accounts/groups.
              Group ID(GID): 
                        Group identifier is the number indicating the primary group of users. Most of the time it is the same as the UID.
              User ID Info (GECOS): 
                        This is a comment field. This field contains information like the user phone number, address, or full name of the user. 
                        This field is used by the finger command to get information about the user.
              Home directory: 
                        This field contains the absolute path of the user’s home directory. By default, the users are created under the 
                         /home directory. If this file is empty, then the home directory of that user will be /
              Login shell: 
                        This field store the absolute path of the user shell. This shell is started when the user is log in to the system.


===============================================================================================================================================

    shadow
      cat /etc/shadow

          The /etc/shadow is a text-based password file. The shadow file stores the hashed passphrase (or “hash”) format for Linux user 
          account with additional properties related to the user password. This shadow file is directly accessible only to the root user. 
          However, some commands or programs (e.g., su, passwd, and others) with unique SetUID (SUID) are set on them to grant them access to the 
          shadow file. Understanding /etc/shadow file format is essential for sysadmins and developers to debug user account issues. 
          Hence, we are going to learn about it.
       

         Understanding /etc/shadow file fields and format
           Basically, the /etc/shadow file stores secure user account information. All fields are separated by a colon (:) symbol. 
           It contains one entry per line for each user listed in /etc/passwd file. Generally, shadow file entry looks as follows 
           (click to enlarge image):

      example     sai:x:1001:1002:Sai Kumar,555,123456789,999123457:/home/sai:/bin/bash

            As with the /etc/passwd, each field in the shadow file is also separated with “:” colon characters as follows:
            
            Username : A valid account name, which exist on the system.

            Password : Your encrypted password is in hash format. The password should be minimum 15-20 characters long including special 
                       characters, digits, lower case alphabetic and more. Usually password format is set to $id$salt$hashed, The $id is the 
                       algorithm prefix used On GNU/Linux as follows
                                $1$ is MD5
                                $2a$ is Blowfish
                                $2y$ is Blowfish
                                $5$ is SHA-256
                                $6$ is SHA-512
                                $y$ is yescrypt

           Last password change (lastchanged) : The date of the last password change, expressed as the number of days since Jan 1, 1970 
                            (Unix time). The value 0 has a special meaning, which is that the user should change her password the next time she 
                             will log in the system. An empty field means that password aging features are disabled.

           Minimum : The minimum number of days required between password changes i.e. the number of days left before the user is allowed to 
                      change her password again. An empty field and value 0 mean that there are no minimum password age.

           Maximum : The maximum number of days the password is valid, after that user is forced to change her password again.

           Warn : The number of days before password is to expire that user is warned that his/her password must be changed

           Inactive : The number of days after password expires that account is disabled.

           Expire : The date of expiration of the account, expressed as the number of days since Jan 1, 1970.
